from curses import baudrate
import time
import canopen

def findDevice(baud):
    isFindDevice = False
    time.sleep(0.5)
    network = canopen.Network()
    network.connect(bustype='slcan', channel='/dev/cu.usbmodem141101', bitrate=baud)
    # This will attempt to read an SDO from nodes 1 - 127
    network.scanner.search()
    # We may need to wait a short while here to allow all nodes to respond
    time.sleep(0.05)
    for node_id in network.scanner.nodes:
        print("Found node %d!" % node_id)
        isFindDevice = True
    network.disconnect()
    return isFindDevice

def searchBaud():
    baudList = {100000,500000,250000,1000000,250000,50000,20000,125000}
    for baud in baudList:
        isFindDevice = findDevice(baud)
        if(isFindDevice == True):
            if(baud == 10000):
                print("baud num is 1")
            elif(baud == 20000):
                print("baud num is 2")
            elif(baud == 50000):
                print("baud num is 3")
            elif(baud == 100000):
                print("baud num is 4")
            elif(baud == 125000):
                print("baud num is 5")
            elif(baud == 250000):
                print("baud num is 6")
            elif(baud == 500000):
                print("baud num is 7")
            elif(baud == 1000000):
                print("baud num is 8 or 0 other number ")

if __name__ == "__main__":
    searchBaud()